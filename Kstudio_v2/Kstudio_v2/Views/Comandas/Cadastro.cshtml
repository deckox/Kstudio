@using DocumentFormat.OpenXml.Vml.Spreadsheet
@using Newtonsoft.Json
@model Kstudio_v2.Models.Comanda


@{
    ViewBag.Title = "Cadastro";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@section Scripts{
    <script type="text/javascript" src='@Url.Content("~/Scripts/Comandas/cadastro.js?v3")' asp-append-version="true"></script>

}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <body>
        <div class="form-horizonta">
            @Html.Raw(ViewData["mensagem"] ?? "")
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <h1>Cadastrar Comanda</h1>
            <hr />
            <div class="form-group">
                <table>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Banda, htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.Banda, new { htmlAttributes = new { id = "pesquisa", list = "autocompleteCliente", autocomplete = "off", required = "", @class = "form-control" } })
                                    <datalist id="autocompleteCliente"></datalist>
                                </div>
                            </div>
                        </td>
                        <td class="col-md-5">
                            <div class="control-label col-md-5">
                               <input type="button" value="Pesquisar" class="btn btn-default" onclick="preencheCamposDeAgendamento()" />
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.Data, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", } })
                                    @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.HoraDeInicio, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.HoraDeInicio, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.HoraDeInicio, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.Label("Horario Final", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.HoraFinal, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.HoraFinal, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.HorasDeEnsaio, htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-5">
                                    @Html.EditorFor(model => model.HorasDeEnsaio, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.HorasDeEnsaio, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ValorDeHoras, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.ValorDeHoras, new { htmlAttributes = new { @class = "form-control", required = "", min = 1 } })
                                    @Html.ValidationMessageFor(model => model.ValorDeHoras, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                    </tr>
                </table>
                <div align="center">
                    <br />
                    <input type="button" id="plus" value="Adicionar Produtos" class="btn btn-default" style="width:300px" onclick="addFieldsProdutos()" />
                </div>
                <br />
                <table id="tabelaProdutos">
                    @for (var i = 0; i < Model.Produto.Count; i++)
                    {
                        <tr id="modeloTr">
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Produto.FirstOrDefault().Nome, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Produto[i].Nome, new {htmlAttributes = new {id = "pesquisaProduto_0", list = "autocompleteCliente", autocomplete = "off", required = "",  onclick = "pesquisaProdutoHandler()", @class = "form-control"}})
                                    <datalist id="autocompleteProduto"></datalist>
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Produto.FirstOrDefault().Quantidade, htmlAttributes: new {@class = "control-label col-md-3"})
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Produto[i].Quantidade, new {htmlAttributes = new {@class = "form-control", required = "required", min = 1, id = "Produto_Quantidade_0"}})
                                    @Html.ValidationMessageFor(model => model.Produto[i].Quantidade, "", new {@class = "text-danger"})
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Produto.FirstOrDefault().Preco, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Produto[i].Preco, new {htmlAttributes = new {@class = "form-control", required = "required", min = "1.00", value = "", id = "Produto_Preco_0"}})
                                    @Html.ValidationMessageFor(model => model.Produto[i].Preco, "", new {@class = "text-danger"})
                                </div>
                            </div>
                        </td>
                    </tr>
                    }
                </table>
            </div>
        </div>
        <br />
        <div align="center">
            <label for="nada">Status:</label>
            <input type="radio" value="aberto" id="statusaberto"/>
            <label for="aberto">Em Aberto</label>
            <input type="radio" value="fechado" id="statusfechado"/>
            <label for="fechado">Pago</label>
            @Html.HiddenFor(model => model.StatusComanda)
        </div>
        <br />
        <div align="center">
            <label id="valorTotalId" >Valor total</label>
            @Html.HiddenFor(model => model.ValorTotalDaComanda)
        </div>
        <br />
        <div class="form-group">
            <div>
                <input id="salvar" type="submit" value="Salvar" class="btn-default" />
                <input id="limpar" type="reset" value="Limpar" class="btn-default" />
                <input id="btncalcular" type="button" value="Calcular!" onclick="valorCalculadoDaComanda()" />
            </div>
        </div>
    </body>


}
